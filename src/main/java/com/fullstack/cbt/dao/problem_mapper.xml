<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fullstack.cbt.dao.ProblemDAO">

	<select id="subjectList" resultType="com.fullstack.cbt.dto.SubjectDTO">
		SELECT su_idx, su_name FROM cbt_subject WHERE su_is_blind = 0
	</select>
	
	<select id="subjectChapList" resultType="com.fullstack.cbt.dto.SubjectChapterDTO">
		SELECT sc_idx, sc_name, su_idx FROM cbt_subject_chapter WHERE su_idx = #{param1}
	</select>
	
	<insert id="problemWrite" parameterType="hashmap">
		INSERT INTO cbt_problem_create(
			su_idx, sc_idx, pc_problem,pc_answer,pc_answer1,pc_answer2
			,pc_answer3,pc_answer4,pc_explan,pc_difficulty
			) VALUES
		(#{su_idx}, #{sc_idx}, #{pc_problem},#{pc_answer},#{pc_answer1},#{pc_answer2}
		,#{pc_answer3},#{pc_answer4},#{pc_explan},#{pc_difficulty})
	</insert>
	
	<select id="problemList" resultType="com.fullstack.cbt.dto.ProblemDTO">	
		SELECT pc_idx, su_idx, sc_idx, pc_problem, pc_difficulty, pc_date, su_name, sc_name, mb_id
			FROM 
			cbt_problem_create 
				NATURAL JOIN 
			cbt_subject 
				NATURAL JOIN 
			cbt_subject_chapter
	</select>
	
	<select id="problemDetailList" resultType="com.fullstack.cbt.dto.ProblemDTO">	
		SELECT pc_idx, su_idx, sc_idx, pc_problem, pc_difficulty, pc_date, su_name, sc_name, mb_id
			FROM 
			cbt_problem_create 
				NATURAL JOIN 
			cbt_subject 
				NATURAL JOIN 
			cbt_subject_chapter
				WHERE
			su_idx = #{su_idx}
	</select>
	
	<select id="subjectChapDetailList" resultType="com.fullstack.cbt.dto.ProblemDTO">	
		SELECT pc_idx, su_idx, sc_idx, pc_problem, pc_difficulty, pc_date, su_name, sc_name
			FROM 
			cbt_problem_create 
				NATURAL JOIN 
			cbt_subject 
				NATURAL JOIN 
			cbt_subject_chapter
				WHERE
			sc_idx = #{sc_idx}
	</select>
	
	<select id="detail" parameterType="String" resultType="com.fullstack.cbt.dto.ProblemDTO">
			SELECT * FROM cbt_problem_create WHERE pc_idx = #{pc_idx}
	</select>
	
	<select id="subjectChap" resultType="com.fullstack.cbt.dto.SubjectChapterDTO">
		SELECT sc_idx, sc_name, su_idx FROM cbt_subject_chapter WHERE su_idx = #{su_idx}
	</select>
	
	<update id="problemUpdate" parameterType="hashmap">
		UPDATE cbt_problem_create SET
			su_idx = #{su_idx}
			,sc_idx = #{sc_idx}
			,pc_problem = #{pc_problem}
			,pc_answer = #{pc_answer}
			,pc_answer1 = #{pc_answer1}
			,pc_answer2 = #{pc_answer2}
			,pc_answer3 = #{pc_answer3}
			,pc_answer4 = #{pc_answer4}
			,pc_explan = #{pc_explan}
			,pc_difficulty = #{pc_difficulty}
		WHERE pc_idx = #{pc_idx}			
	</update>
	
	

	
	
    <!-- 게시물 목록(페이징) -->
    <select id="getListPaging" resultType="com.fullstack.cbt.dto.ProblemDTO">
        SELECT 
        	pc_idx
        	,su_idx
        	,sc_idx
        	,pc_problem
        	,pc_difficulty
        	,pc_date
        	,su_name
        	,sc_name
        	,mb_id  
			FROM 
				cbt_problem_create
			NATURAL JOIN 
				cbt_subject 
			NATURAL JOIN 
				cbt_subject_chapter
			ORDER BY pc_idx desc 
		LIMIT #{skip} , 10
    </select>
	
	<!-- 게시물 총 개숫 -->
    <select id="getTotal" resultType="int">
        select count(*) from cbt_problem_create
    </select>

	<select id="selectedListPaging" resultType="com.fullstack.cbt.dto.ProblemDTO">
		SELECT 
        	pc_idx
        	,su_idx
        	,sc_idx
        	,pc_problem
        	,pc_difficulty
        	,pc_date
        	,su_name
        	,sc_name
        	,mb_id  
			FROM 
				cbt_problem_create
			NATURAL JOIN 
				cbt_subject 
			NATURAL JOIN 
				cbt_subject_chapter
			<include refid="selectedSql"></include>
			ORDER BY pc_idx desc 
		LIMIT #{param4} , 10
	</select>
	
	<sql id="selectedSql">
		<trim prefix="where" suffixOverrides="and">
			<if test = "!param1.equals('')">
				su_idx = #{param1} and
			</if>
		
			<if test = "!param2.equals('')">
				sc_idx = #{param2} and 
			</if>
		
			<if test = "!param3.equals('')">
				mb_id LIKE CONCAT('%',#{param3}, '%') and 
			</if>
		</trim>
	</sql>
	
	<select id="selectedTotal" resultType="int"  >
		SELECT count(*)
		FROM 
			cbt_problem_create 
		NATURAL JOIN 
			cbt_subject  
		NATURAL JOIN 
			cbt_subject_chapter	
		<include refid="totalSql"></include>
		ORDER BY pc_idx DESC
	</select>
	
	<sql id="totalSql">
		<trim prefix="where" suffixOverrides="and">
			<if test = "!param1.equals('')">
				su_idx = #{param1} and
			</if>
		
			<if test = "!param2.equals('')">
				sc_idx = #{param2} and 
			</if>
		
			<if test = "!param3.equals('')">
				mb_id LIKE CONCAT('%',#{param3}, '%') and 
			</if>
		</trim>
	</sql>

	<select id="answerRate" resultType="com.fullstack.cbt.dto.ProblemDTO">
		select pc_idx,(select count(ta_is_answer) from cbt_test_answer where ta_is_answer="O" and pc_idx=cbt_problem_create.pc_idx)/(select count(pc_idx) from cbt_test_answer where pc_idx = cbt_problem_create.pc_idx)*100 as answerRate from cbt_problem_create where not (select count(ta_is_answer) from cbt_test_answer where ta_is_answer="O" and pc_idx=cbt_problem_create.pc_idx)/(select count(pc_idx) from cbt_test_answer where pc_idx = cbt_problem_create.pc_idx)*100 is null; 
	</select>



</mapper>











